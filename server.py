import http.server
import json
import socketserver

class RedirectHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/':
            self.send_response(302)  # 302 Found
            self.send_header('Location', '/pwn.html')
            self.end_headers()
        else:
            super().do_GET()
    def do_POST(self):
        if self.path == '/log':
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            try:
                json_data = json.loads(post_data.decode('utf-8'))
                message = json_data['msg']
                if "Stage 1" in message:
                    print("\033c")
                print(message)
            except json.JSONDecodeError:
                print("Received data is not a valid JSON")
            self.send_response(200)
            self.end_headers()
        else:
            self.send_response(404)
            self.end_headers()
    def end_headers(self):
        self.send_header('Cache-Control', 'no-store, no-cache, must-revalidate')
        self.send_header('Pragma', 'no-cache')
        self.send_header('Expires', '0')
        super().end_headers()
    def log_message(self, format, *args):
        pass

Handler = RedirectHandler

with socketserver.TCPServer(("0.0.0.0", 8080), Handler) as httpd:
    httpd.allow_reuse_address = True
    httpd.serve_forever()
